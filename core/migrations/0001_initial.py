# Generated by Django 5.2.5 on 2025-08-16 22:26

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Letto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codice', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Stanza',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=30, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Farmaco',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creato_il', models.DateTimeField(auto_now_add=True)),
                ('aggiornato_il', models.DateTimeField(auto_now=True)),
                ('nome', models.CharField(max_length=120)),
                ('forma', models.CharField(blank=True, max_length=60)),
                ('forza_val', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('forza_udm', models.CharField(blank=True, max_length=20)),
                ('codice_atc', models.CharField(blank=True, max_length=10)),
                ('produttore', models.CharField(blank=True, max_length=120)),
                ('aggiornato_da', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='aggiornato_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('creato_da', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='creato_%(class)s', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Paziente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=80, verbose_name='Nome')),
                ('cognome', models.CharField(max_length=80, verbose_name='Cognome')),
                ('sesso', models.CharField(choices=[('M', 'Maschio'), ('F', 'Femmina'), ('X', 'Altro/ND')], max_length=1, verbose_name='Sesso')),
                ('data_nascita', models.DateField(verbose_name='Data di nascita')),
                ('codice_fiscale', models.CharField(max_length=16, unique=True, validators=[django.core.validators.RegexValidator(message='Inserire un Codice Fiscale valido (16 caratteri, lettere maiuscole).', regex='^[A-Z]{6}[0-9]{2}[A-EHLMPR-T][0-9]{2}[A-Z][0-9]{3}[A-Z]$')], verbose_name='Codice Fiscale')),
                ('tessera_sanitaria', models.CharField(blank=True, max_length=22, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='Inserire un numero tessera sanitaria valido (20 cifre, con o senza prefisso IT).', regex='^(IT)?\\d{20}$')], verbose_name='Tessera Sanitaria')),
                ('telefono', models.CharField(blank=True, max_length=30, verbose_name='Telefono')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Email')),
                ('creato_il', models.DateTimeField(auto_now_add=True)),
                ('aggiornato_il', models.DateTimeField(auto_now=True)),
                ('utente', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='profilo_paziente', to=settings.AUTH_USER_MODEL, verbose_name='Utente collegato')),
            ],
            options={
                'verbose_name': 'Paziente',
                'verbose_name_plural': 'Pazienti',
                'ordering': ['cognome', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='ParametroVitale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creato_il', models.DateTimeField(auto_now_add=True)),
                ('aggiornato_il', models.DateTimeField(auto_now=True)),
                ('rilevato_il', models.DateTimeField()),
                ('pas', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('pad', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('fc', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('spo2', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('temp_c', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True)),
                ('glicemia_mgdl', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('variazione_terapia', models.CharField(blank=True, max_length=200)),
                ('note', models.CharField(blank=True, max_length=200)),
                ('aggiornato_da', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='aggiornato_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('creato_da', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='creato_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('operatore', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='parametri_operatore', to=settings.AUTH_USER_MODEL)),
                ('paziente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parametri', to='core.paziente')),
            ],
            options={
                'ordering': ['-rilevato_il'],
            },
        ),
        migrations.CreateModel(
            name='Episodio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creato_il', models.DateTimeField(auto_now_add=True)),
                ('aggiornato_il', models.DateTimeField(auto_now=True)),
                ('data_inizio', models.DateField()),
                ('data_fine', models.DateField(blank=True, null=True)),
                ('motivo', models.CharField(blank=True, max_length=200)),
                ('stato', models.CharField(choices=[('ATTIVO', 'In degenza'), ('DIMESSO', 'Dimesso')], default='ATTIVO', max_length=10)),
                ('aggiornato_da', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='aggiornato_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('creato_da', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='creato_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('medico', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='episodi_medico', to=settings.AUTH_USER_MODEL)),
                ('letto', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.letto')),
                ('paziente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='episodi', to='core.paziente')),
            ],
            options={
                'ordering': ['-data_inizio'],
            },
        ),
        migrations.CreateModel(
            name='Documento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creato_il', models.DateTimeField(auto_now_add=True)),
                ('aggiornato_il', models.DateTimeField(auto_now=True)),
                ('tipo', models.CharField(choices=[('TERAPIA_SETT', 'Terapia settimanale'), ('DIARIO_PARAM', 'Diario parametri'), ('DIARIO_IGIENE', 'Diario igiene'), ('REFERTO', 'Referto'), ('CONSENSO', 'Consenso'), ('ALTRO', 'Altro')], default='ALTRO', max_length=20)),
                ('file', models.FileField(upload_to='documenti_paziente/%Y/%m/')),
                ('tag', models.CharField(blank=True, max_length=120)),
                ('aggiornato_da', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='aggiornato_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('caricato_da', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='documenti_caricati', to=settings.AUTH_USER_MODEL)),
                ('creato_da', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='creato_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('episodio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='documenti', to='core.episodio')),
                ('paziente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documenti', to='core.paziente')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Prescrizione',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creato_il', models.DateTimeField(auto_now_add=True)),
                ('aggiornato_il', models.DateTimeField(auto_now=True)),
                ('data_inizio', models.DateField()),
                ('data_fine', models.DateField(blank=True, null=True)),
                ('attiva', models.BooleanField(default=True)),
                ('note', models.TextField(blank=True)),
                ('aggiornato_da', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='aggiornato_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('creato_da', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='creato_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('medico', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='prescrizioni_medico', to=settings.AUTH_USER_MODEL)),
                ('paziente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescrizioni', to='core.paziente')),
            ],
            options={
                'ordering': ['-data_inizio'],
            },
        ),
        migrations.CreateModel(
            name='RigaPrescrizione',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creato_il', models.DateTimeField(auto_now_add=True)),
                ('aggiornato_il', models.DateTimeField(auto_now=True)),
                ('dose_val', models.DecimalField(decimal_places=2, max_digits=8)),
                ('dose_udm', models.CharField(max_length=20)),
                ('via', models.CharField(choices=[('OS', 'Orale'), ('IM', 'IM'), ('EV', 'EV'), ('SC', 'SC'), ('SL', 'Sublinguale'), ('TOP', 'Topica'), ('ALT', 'Altro')], max_length=3)),
                ('prn', models.BooleanField(default=False)),
                ('note', models.CharField(blank=True, max_length=200)),
                ('aggiornato_da', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='aggiornato_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('creato_da', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='creato_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('farmaco', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.farmaco')),
                ('prescrizione', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='righe', to='core.prescrizione')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OrarioDose',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creato_il', models.DateTimeField(auto_now_add=True)),
                ('aggiornato_il', models.DateTimeField(auto_now=True)),
                ('ora', models.TimeField()),
                ('giorni_settimana', models.CharField(default='1234567', max_length=7)),
                ('aggiornato_da', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='aggiornato_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('creato_da', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='creato_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('riga', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orari', to='core.rigaprescrizione')),
            ],
        ),
        migrations.CreateModel(
            name='Somministrazione',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creato_il', models.DateTimeField(auto_now_add=True)),
                ('aggiornato_il', models.DateTimeField(auto_now=True)),
                ('programmata_il', models.DateTimeField(blank=True, null=True)),
                ('data_ora', models.DateTimeField(blank=True, null=True)),
                ('dose_erogata', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('stato', models.CharField(choices=[('SOMMINISTRATO', 'Somministrato'), ('RIFIUTATO', 'Rifiutato'), ('SALTATO', 'Non disp./saltato')], max_length=14)),
                ('note', models.CharField(blank=True, max_length=200)),
                ('aggiornato_da', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='aggiornato_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('creato_da', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='creato_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('operatore', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='somministrazioni_operatore', to=settings.AUTH_USER_MODEL)),
                ('paziente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='somministrazioni', to='core.paziente')),
                ('riga', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='somministrazioni', to='core.rigaprescrizione')),
            ],
        ),
        migrations.AddField(
            model_name='letto',
            name='stanza',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='letti', to='core.stanza'),
        ),
        migrations.CreateModel(
            name='VoceIgiene',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creato_il', models.DateTimeField(auto_now_add=True)),
                ('aggiornato_il', models.DateTimeField(auto_now=True)),
                ('data', models.DateField()),
                ('turno', models.CharField(choices=[('MATT', 'Mattina'), ('POM', 'Pomeriggio'), ('NOTTE', 'Notte')], max_length=5)),
                ('tipo', models.CharField(choices=[('DOCCIA', 'Doccia/Bagno'), ('PARZ', 'Igiene parziale'), ('ORALE', 'Igiene orale'), ('INTIMA', 'Igiene intima'), ('PANN', 'Cambio presidio'), ('RASATURA', 'Rasatura'), ('CAPUNGH', 'Capelli/Unghie'), ('ALTRO', 'Altro')], max_length=10)),
                ('note', models.CharField(blank=True, max_length=200)),
                ('aggiornato_da', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='aggiornato_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('creato_da', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='creato_%(class)s', to=settings.AUTH_USER_MODEL)),
                ('operatore', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='igiene_operatore', to=settings.AUTH_USER_MODEL)),
                ('paziente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='igiene', to='core.paziente')),
            ],
        ),
        migrations.AddIndex(
            model_name='farmaco',
            index=models.Index(fields=['nome'], name='core_farmac_nome_3436c3_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='farmaco',
            unique_together={('nome', 'forma', 'forza_val', 'forza_udm')},
        ),
        migrations.AddIndex(
            model_name='paziente',
            index=models.Index(fields=['cognome', 'nome'], name='core_pazien_cognome_8d7db8_idx'),
        ),
        migrations.AddIndex(
            model_name='paziente',
            index=models.Index(fields=['codice_fiscale'], name='core_pazien_codice__6b0f5e_idx'),
        ),
        migrations.AddIndex(
            model_name='parametrovitale',
            index=models.Index(fields=['paziente', 'rilevato_il'], name='core_parame_pazient_111897_idx'),
        ),
        migrations.AddConstraint(
            model_name='episodio',
            constraint=models.UniqueConstraint(condition=models.Q(('data_fine__isnull', True)), fields=('paziente',), name='unico_episodio_attivo_per_paziente'),
        ),
        migrations.AlterUniqueTogether(
            name='orariodose',
            unique_together={('riga', 'ora', 'giorni_settimana')},
        ),
        migrations.AddIndex(
            model_name='somministrazione',
            index=models.Index(fields=['paziente', 'programmata_il'], name='core_sommin_pazient_9420b8_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='letto',
            unique_together={('stanza', 'codice')},
        ),
        migrations.AddIndex(
            model_name='voceigiene',
            index=models.Index(fields=['paziente', 'data'], name='core_voceig_pazient_7f47cf_idx'),
        ),
    ]
