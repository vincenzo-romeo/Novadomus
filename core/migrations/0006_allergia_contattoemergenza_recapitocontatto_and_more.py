# Generated by Django 5.2.5 on 2025-08-20 22:31

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0005_alter_farmaco_forma_alter_rigaprescrizione_via_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Allergia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creato_il', models.DateTimeField(auto_now_add=True)),
                ('aggiornato_il', models.DateTimeField(auto_now=True)),
                ('categoria', models.CharField(choices=[('ALIMENTARE', 'Alimentare'), ('FARMACO', 'Farmacologica'), ('ALTRO', 'Altro')], max_length=12)),
                ('sostanza_libera', models.CharField(blank=True, max_length=150, verbose_name='Sostanza/Alimento')),
                ('gravita', models.CharField(choices=[('LIEVE', 'Lieve'), ('MODERATA', 'Moderata'), ('GRAVE', 'Grave'), ('ANAFILASSI', 'Anafilassi')], default='MODERATA', max_length=10)),
                ('reazione', models.TextField(blank=True, verbose_name='Reazione/Note cliniche')),
                ('data_rilevazione', models.DateField(blank=True, null=True)),
                ('attiva', models.BooleanField(default=True)),
                ('note', models.CharField(blank=True, max_length=200)),
            ],
            options={
                'verbose_name': 'Allergia',
                'verbose_name_plural': 'Allergie',
                'ordering': ['-attiva', 'categoria', 'gravita'],
            },
        ),
        migrations.CreateModel(
            name='ContattoEmergenza',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creato_il', models.DateTimeField(auto_now_add=True)),
                ('aggiornato_il', models.DateTimeField(auto_now=True)),
                ('nome', models.CharField(max_length=80)),
                ('cognome', models.CharField(max_length=80)),
                ('relazione', models.CharField(choices=[('FIGLIO', 'Figlio/a'), ('CONIUGE', 'Coniuge/Partner'), ('FAMILIARE', 'Familiare'), ('CAREGIVER', 'Caregiver'), ('ALTRO', 'Altro')], default='FAMILIARE', max_length=10)),
                ('note', models.CharField(blank=True, max_length=200)),
                ('is_primario', models.BooleanField(default=False, verbose_name='Contatto principale')),
                ('attivo', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Contatto di emergenza',
                'verbose_name_plural': 'Contatti di emergenza',
                'ordering': ['cognome', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='RecapitoContatto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creato_il', models.DateTimeField(auto_now_add=True)),
                ('aggiornato_il', models.DateTimeField(auto_now=True)),
                ('tipo', models.CharField(choices=[('MOBILE', 'Cellulare'), ('FISSO', 'Telefono fisso'), ('EMAIL', 'Email')], max_length=10)),
                ('valore', models.CharField(max_length=120)),
                ('preferito', models.BooleanField(default=False)),
                ('note', models.CharField(blank=True, max_length=120)),
            ],
            options={
                'verbose_name': 'Recapito',
                'verbose_name_plural': 'Recapiti',
                'ordering': ['-preferito', 'tipo', 'valore'],
            },
        ),
        migrations.AddField(
            model_name='paziente',
            name='comune_nascita',
            field=models.CharField(blank=True, max_length=100, verbose_name='Comune di nascita'),
        ),
        migrations.AddField(
            model_name='paziente',
            name='comune_residenza',
            field=models.CharField(blank=True, max_length=100, verbose_name='Comune di residenza'),
        ),
        migrations.AddField(
            model_name='paziente',
            name='indirizzo_cap',
            field=models.CharField(blank=True, max_length=5, verbose_name='CAP'),
        ),
        migrations.AddField(
            model_name='paziente',
            name='indirizzo_civico',
            field=models.CharField(blank=True, max_length=10, verbose_name='Numero civico'),
        ),
        migrations.AddField(
            model_name='paziente',
            name='indirizzo_via',
            field=models.CharField(blank=True, max_length=150, verbose_name='Indirizzo (via/piazza)'),
        ),
        migrations.AddField(
            model_name='paziente',
            name='provincia_nascita',
            field=models.CharField(blank=True, max_length=2, verbose_name='Provincia di nascita (sigla)'),
        ),
        migrations.AddField(
            model_name='paziente',
            name='provincia_residenza',
            field=models.CharField(blank=True, max_length=2, verbose_name='Provincia di residenza (sigla)'),
        ),
        migrations.AddIndex(
            model_name='paziente',
            index=models.Index(fields=['comune_residenza', 'provincia_residenza'], name='core_pazien_comune__0138aa_idx'),
        ),
        migrations.AddField(
            model_name='allergia',
            name='aggiornato_da',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='aggiornato_%(class)s', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='allergia',
            name='creato_da',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='creato_%(class)s', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='allergia',
            name='farmaco',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.farmaco'),
        ),
        migrations.AddField(
            model_name='allergia',
            name='paziente',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='allergie', to='core.paziente'),
        ),
        migrations.AddField(
            model_name='contattoemergenza',
            name='aggiornato_da',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='aggiornato_%(class)s', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='contattoemergenza',
            name='creato_da',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='creato_%(class)s', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='contattoemergenza',
            name='paziente',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contatti_emergenza', to='core.paziente'),
        ),
        migrations.AddField(
            model_name='recapitocontatto',
            name='aggiornato_da',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='aggiornato_%(class)s', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='recapitocontatto',
            name='contatto',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recapiti', to='core.contattoemergenza'),
        ),
        migrations.AddField(
            model_name='recapitocontatto',
            name='creato_da',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='creato_%(class)s', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='allergia',
            index=models.Index(fields=['paziente', 'attiva'], name='core_allerg_pazient_3995f6_idx'),
        ),
        migrations.AddIndex(
            model_name='allergia',
            index=models.Index(fields=['paziente', 'categoria'], name='core_allerg_pazient_677228_idx'),
        ),
        migrations.AddConstraint(
            model_name='allergia',
            constraint=models.CheckConstraint(condition=models.Q(models.Q(('categoria', 'FARMACO'), ('farmaco__isnull', False)), models.Q(('categoria__in', ['ALIMENTARE', 'ALTRO']), ('sostanza_libera__gt', '')), _connector='OR'), name='allergia_coerenza_categoria'),
        ),
        migrations.AddConstraint(
            model_name='allergia',
            constraint=models.UniqueConstraint(fields=('paziente', 'categoria', 'farmaco', 'sostanza_libera', 'attiva'), name='unica_allergia_attiva_per_sostanza_o_farmaco'),
        ),
        migrations.AddConstraint(
            model_name='contattoemergenza',
            constraint=models.UniqueConstraint(condition=models.Q(('attivo', True), ('is_primario', True)), fields=('paziente',), name='unico_contatto_primario_per_paziente'),
        ),
        migrations.AddIndex(
            model_name='recapitocontatto',
            index=models.Index(fields=['tipo', 'valore'], name='core_recapi_tipo_85d178_idx'),
        ),
    ]
